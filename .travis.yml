cache:
  directories:
  - "$HOME/google-cloud-sdk/"

matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
      compiler: gcc
      addons:
        apt:
          sources:
          # add PPAs with more up-to-date toolchains
          - ubuntu-toolchain-r-test
          packages:
          # install toolchains
          - gcc-5
          - g++-5
          - libpthread-stubs0-dev
          - libgl1-mesa-dev
          - libx11-dev
          - libxrandr-dev
          - libfreetype6-dev
          - libglew1.5-dev
          - libjpeg8-dev
          - libsndfile1-dev
          - libopenal-dev
          - libudev-dev
      env:
        # Make sure gcloud command is on our PATH and the App Engine SDK is in the Python path
        - GAE_PYTHONPATH=${HOME}/.cache/google_appengine PATH=$PATH:${HOME}/google-cloud-sdk/bin PYTHONPATH=${PYTHONPATH}:${GAE_PYTHONPATH} CLOUDSDK_CORE_DISABLE_PROMPTS=1
    - os: osx
      osx_image: xcode8.2

# Enable C++ support
language: cpp

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update          ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install cmake   ; fi

install:
  - if [[ "$TRAVIS_OS_NAME" != "osx" ]]; then export CXX="g++-5" CC="gcc-5"; fi

script:
  - mkdir build
  - cd build
  - cmake .. && make
  - if [[ "$TRAVIS_OS_NAME" != "osx" ]]; then ctest --verbose   ; fi
  - cd ..
  # Install Google App Engine Python SDK
  - if [ ! -d "${GAE_PYTHONPATH}" ]; then
      python scripts/fetch_gae_sdk.py $(dirname "${GAE_PYTHONPATH}");
    fi
  # [START auth]
  # Decrypt the credentials we added to the repo using the key we added with the Travis command line tool
  - openssl aes-256-cbc -K $encrypted_482e2f17cfc1_key -iv $encrypted_482e2f17cfc1_iv
    -in credentials.tar.gz.enc -out credentials.tar.gz -d
  # If the SDK is not already cached, download it and unpack it
  - if [ ! -d ${HOME}/google-cloud-sdk ]; then
       curl https://sdk.cloud.google.com | bash;
    fi
  # Unpack credentials
  - tar -xzf credentials.tar.gz
  # Here we use the decrypted service account credentials to authenticate the command line tool
  - gcloud auth activate-service-account --key-file RType-server-736393d1bca7.json
  # [END auth]

after_success:

  # [START deploy]
  # Deploy the app
  # Set the correct project to deploy to
  - gcloud config set project rtype-server
  - gcloud compute --project "rtype-server" ssh --zone "europe-west1-c" "rtype-server-dev" --quiet
  - git clone https://github.com/HippoBaro/R-Type.git"
  - cd R-Type
  - git checkout $TRAVIS_BRANCH
  - ./install_run_server.sh

notifications:
  slack: r-type2016:mLsIqykIanE3Yt8cHcLetGuv

